fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
res <- optics(bicycletheft@data[,c('Longitude', 'Latitude')], eps = 10, minPts = 10)
res <- extractXi(res, xi = 0.01)
bicycletheft@data$optics_cluster <- res$cluster
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=data.frame(ID=row.names(clusterpolys_optics)))
factpal <- colorFactor(brewer.pal(12,"Set3"), clusterpolys_optics$ID)
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
res <- optics(bicycletheft@data[,c('Longitude', 'Latitude')], eps = .01, minPts = 3)
res <- extractXi(res, xi = 0.01)
bicycletheft@data$optics_cluster <- res$cluster
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=data.frame(ID=row.names(clusterpolys_optics)))
factpal <- colorFactor(brewer.pal(12,"Set3"), clusterpolys_optics$ID)
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
res <- optics(bicycletheft@data[,c('Longitude', 'Latitude')], eps = 1, minPts = 3)
res
res <- optics(bicycletheft@data[,c('Longitude', 'Latitude')], eps = 10, minPts = 3)
res
res <- extractXi(res, xi = 0.01)
res
bicycletheft@data$optics_cluster <- res$cluster
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=data.frame(ID=row.names(clusterpolys_optics)))
factpal <- colorFactor(brewer.pal(12,"Set3"), clusterpolys_optics$ID)
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
res <- optics(bicycletheft@data[,c('Longitude', 'Latitude')], eps = 10, minPts = 10)
res <- extractXi(res, xi = 0.01)
bicycletheft@data$optics_cluster <- res$cluster
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=data.frame(ID=row.names(clusterpolys_optics)))
factpal <- colorFactor(brewer.pal(12,"Set3"), clusterpolys_optics$ID)
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
library(tidyverse)
library(ggthemes)
library(gganimate)
library(lubridate)
library(sp)
library(leaflet)
library(leaflet.extras)
library(dbscan)
library(forcats)
library(rgdal)
library(zoo)
library(maptools)
library(spatstat)
setwd("/Users/kaza/Dropbox/manchestercrime/monthlydata")
if(!file.exists("crime_manchester.RData")){
subdirs <- list.dirs(".",)
subdirs <- subdirs[-1]
streetcrime <- NULL
#The data is from https://data.police.uk/data/
for (i in 1:length(subdirs)){
filename <- list.files(subdirs[i], pattern=glob2rx("*street.csv"), full.names = T)
streetcrime[[i]] <- read_csv(filename)
}
streetcrime <- bind_rows(streetcrime)
streetcrime$Month <- parse_date_time2(streetcrime$Month, "Ym")
names(streetcrime) <- gsub(" ", "_", names(streetcrime))
streetcrime$Quarter <-  as.yearqtr(streetcrime$Month)
streetcrime$year <-  as.character(year(streetcrime$Month))
manchesterbnd <- readOGR("/Users/kaza/Dropbox/manchestercrime/BNDfiles/greatermanchester.shp", layer='greatermanchester')
manchesterlsoa <- readOGR("/Users/kaza/Dropbox/manchestercrime/BNDfiles/LSOA_manchester.shp", layer="LSOA_manchester")
save.image(file="crime_manchester.RData")
} else {
load('crime_manchester.RData')
}
#Assuming that coords are in long,lat configuration
jitter_longlat <- function(coords, km = 1) {
n <- dim(coords)[1]
length_at_lat <- rep(110.5742727, n) # in kilometers at the equator. Assuming a sphere
length_at_long <- cos(coords[,1]* (2 * pi) / 360) * 110.5742727
randnumber <- coords
randnumber[,2] <- runif(n, min=-1,max=1) * (1/length_at_lat) * km
randnumber[,1] <- runif(n, min=-1,max=1) * (1/length_at_long) * km
out <- coords
out[,1] <- coords[,1] + randnumber[,1]
out[,2] <- coords[,2] + randnumber[,2]
out <- as.data.frame(out)
return(out)
}
# Jitter upto a maximum of 600m
streetcrime[,c("Longitude", "Latitude")] <- jitter_longlat(streetcrime[,c("Longitude", "Latitude")], km=.6)
sum(duplicated(streetcrime[,c("Longitude", "Latitude")]))
coordinates(streetcrime) <- ~Longitude+Latitude
streetcrime@data[,c("Longitude", "Latitude")]<- coordinates(streetcrime)
wgs84crs <- CRS("+proj=longlat +datum=WGS84")
proj4string(streetcrime) <- wgs84crs
#streetcrime <- streetcrime[spTransform(manchesterbnd, wgs84crs),]
# Filter by type of crime.
violentcrime <- streetcrime %>% subset(streetcrime$Crime_type == "Violence and sexual offences")
bicycletheft <- streetcrime %>% subset(streetcrime$Crime_type == "Bicycle theft")
theme_set(theme_tufte())
g_street <-  ggplot(streetcrime@data) +
geom_bar(aes(x=fct_infreq(Crime_type))) +
coord_flip() +
facet_wrap(~Quarter)+
labs(x='Crime Type', y='Count')
#table(bicycletheft$Last_outcome_category)
library(ggrepel)
k <- streetcrime@data %>% count(Month, fct_infreq(Crime_type), sort = FALSE)
names(k) <- c('Month', "Crime_type", "n")
k %>%
mutate(label = if_else(Month == max(Month), as.character(Crime_type), NA_character_))%>%
ggplot(aes(x=Month, y=n, col= Crime_type))+
geom_smooth()+
scale_colour_discrete(guide = 'none') +
geom_label_repel(aes(label = label),
nudge_x = 1,
na.rm = TRUE)
g_bicycle<-  ggplot(bicycletheft@data) +
geom_bar(aes(x=fct_infreq(Last_outcome_category), y = (..count..)/sum(..count..) * 100)) +
coord_flip() +
labs(x='Outcome', y='Percent')
g_violent_outcome <-  ggplot(violentcrime@data) +
geom_bar(aes(x=fct_infreq(Last_outcome_category), y = (..count..)/sum(..count..) * 100)) +
coord_flip() +
labs(x='Outcome', y='Percent')
map_bicycle <- bicycletheft %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addMarkers(clusterOptions = markerClusterOptions(),
popup = ~as.character(Last_outcome_category), label = ~as.character(Crime_ID))
bicycletheft <- spTransform(bicycletheft, wgs84crs)
#bicycletheft <- spTransform(bicycletheft, CRS(proj4string(manchesterbnd)))
#manchesterbnd <- spTransform(manchesterbnd, CRS(proj4string(bicycletheft)))
#manchesterlsoa <- spTransform(manchesterlsoa, CRS(proj4string(bicycletheft)))
#Exclude the pts outside the boundary
#bicycletheft <- bicycletheft[manchesterbnd,]
# # Construct a heatmap.
#
#
# ## MAKE CONTOUR LINES
# ## Note, bandwidth choice is based on MASS::bandwidth.nrd()
#
# heatmap_withcontours <- function(x, bwscale=1){
#   coords <- slot(x, "coords")
#   bw <- coords %>% apply(2, bandwidth.nrd)/bwscale
#   kde <- coords %>% bkde2D(bandwidth= bw, gridsize = c(500,500))
#   CL <- contourLines(kde$x1 , kde$x2 , kde$fhat)
#   ## EXTRACT CONTOUR LINE LEVELS
#   LEVS <- as.factor(sapply(CL, `[[`, "level"))
#   NLEV <- length(levels(LEVS))
#
#   ## CONVERT CONTOUR LINES TO POLYGONS
#   pgons <- lapply(1:length(CL), function(i)
#     Polygons(list(Polygon(cbind(CL[[i]]$x, CL[[i]]$y))), ID=i))
#   spgons = SpatialPolygons(pgons)
#   return(spgons)
# }
#
#
#
# ## Leaflet map with polygon
#   violentcrime%>%
#   subset(violentcrime$Quarter=="2016 Q3")%>%
#   heatmap_withcontours(bwscale=3) %>%
#    leaflet() %>% addTiles() %>%
#   addPolygons(color = heat.colors(NLEV, NULL)[LEVS]) %>%
#   addPolygons(data=spTransform(manchesterbnd, wgs84crs), col='blue', fillColor = "#ffffff")
#    violentcrime %>%
#     subset(violentcrime$Quarter == "2016 Q3")%>%
#      leaflet() %>% addTiles() %>%
#     addWebGLHeatmap(lng=violentcrime@coords[,1], lat=violentcrime@coords[,2],size = 10000, units='px')
#Construct ppp
bicycletheft.ppp <- ppp(x=bicycletheft@coords[,1],y=bicycletheft@coords[,2],as.owin(manchesterbnd))
summary(bicycletheft.ppp)
intensity(bicycletheft.ppp)
plot(density(bicycletheft.ppp))
plot(bicycletheft.ppp, add=T, cex=.5)
bicycletheft <- bicycletheft[bicycletheft$Quarter=="2016 Q2",]
kNNdistplot(bicycletheft@data[,c('Longitude', 'Latitude')], k = 3)
abline(h=.015, col='red')
db_clusters_bicycletheft<- dbscan(bicycletheft@data[,c('Longitude', 'Latitude')], eps=0.005, minPts=3)
print(db_clusters_bicycletheft)
bicycletheft@data$dbscan_cluster <- db_clusters_bicycletheft$cluster
clusterpolys <- bicycletheft %>%
split(bicycletheft@data$dbscan_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys <- lapply(2:length(clusterpolys), function(x){spChFIDs(clusterpolys[[x]],names(clusterpolys)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys <- SpatialPolygonsDataFrame(clusterpolys, data=data.frame(ID=row.names(clusterpolys)))
factpal <- colorFactor(brewer.pal(12,"Set3"), clusterpolys$ID)
map_bicycle2 <- clusterpolys %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle2
res <- optics(bicycletheft@data[,c('Longitude', 'Latitude')], eps = 10, minPts = 10)
res <- extractXi(res, xi = 0.01)
bicycletheft@data$optics_cluster <- res$cluster
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=data.frame(ID=row.names(clusterpolys_optics)))
factpal <- colorFactor(brewer.pal(12,"Set3"), clusterpolys_optics$ID)
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
res <- extractXi(res, xi = 0.05)
bicycletheft@data$optics_cluster <- res$cluster
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=data.frame(ID=row.names(clusterpolys_optics)))
factpal <- colorFactor(brewer.pal(12,"Set3"), clusterpolys_optics$ID)
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
res <- optics(bicycletheft@data[,c('Longitude', 'Latitude')], eps = 10, minPts = 10)
plot(res)
res <- extractXi(res, xi = 0.015)
bicycletheft@data$optics_cluster <- res$cluster
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=data.frame(ID=row.names(clusterpolys_optics)))
res <- optics(bicycletheft@data[,c('Longitude', 'Latitude')], eps = 10, minPts = 10)
plot(res)
res <- extractXi(res, xi = 0.015)
bicycletheft@data$optics_cluster <- res$cluster
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
names(clusterpolys_optics)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=data.frame(ID=names(clusterpolys_optics)))
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
bicycletheft@data$optics_cluster <- res$cluster
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(1:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=data.frame(ID=names(clusterpolys_optics)))
names(clusterpolys_optis)
names(clusterpolys_optics)
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(1:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics
str(clusterpolys_optics)
names(clusterpolys_optics)
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=data.frame(ID=names(clusterpolys_optics)))
dat=data.frame(ID=names(clusterpolys_optics))
row.names(dat) <- row.names(clusterpolys_optics)
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=dat )
factpal <- colorFactor(brewer.pal(12,"Set3"), clusterpolys_optics$ID)
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
res <- optics(bicycletheft@data[,c('Longitude', 'Latitude')], eps = 10, minPts = 10)
plot(res)
res <- extractXi(res, xi = 0.015)
bicycletheft@data$optics_cluster <- res$cluster
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
dat=data.frame(ID=names(clusterpolys_optics))
row.names(dat) <- row.names(clusterpolys_optics)
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data=dat )
factpal <- colorFactor(brewer.pal(12,"Set3"), clusterpolys_optics$ID)
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
es <- optics(bicycletheft@data[,c('Longitude', 'Latitude')], eps = 10, minPts = 10)
plot(res)
res <- extractXi(res, xi = 0.015)
bicycletheft@data$optics_cluster <- res$cluster
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data= data.frame(ID=names(clusterpolys_optics)), match.ID = F)
factpal <- colorFactor(brewer.pal(12,"Set3"), clusterpolys_optics$ID)
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
res <- optics(bicycletheft@data[,c('Longitude', 'Latitude')], eps = 10, minPts = 10)
plot(res)
res <- extractXi(res, xi = 0.015)
bicycletheft@data$optics_cluster <- res$cluster_xi
clusterpolys_optics <- bicycletheft %>%
split(bicycletheft@data$optics_cluster) %>%
lapply(concaveman, concavity=3)
clusterpolys_optics <- lapply(2:length(clusterpolys_optics), function(x){spChFIDs(clusterpolys_optics[[x]],names(clusterpolys_optics)[x])}) %>%
lapply(function(x){x@polygons[[1]]}) %>%
SpatialPolygons
clusterpolys_optics <- SpatialPolygonsDataFrame(clusterpolys_optics, data= data.frame(ID=names(clusterpolys_optics)), match.ID = F)
factpal <- colorFactor(brewer.pal(12,"Set3"), clusterpolys_optics$ID)
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
color=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
fillcolor=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
?addCircles
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
fillColor=~~factpal(clusterpolys_optics$ID), stroke = TRUE, fillOpacity = 0.8)
map_bicycle3
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
fillColor=~~factpal(clusterpolys_optics$ID), stroke = FALSE, fillOpacity = 0.8)
map_bicycle3
map_bicycle3 <- clusterpolys_optics %>%
leaflet() %>%
addProviderTiles(providers$CartoDB.Positron) %>%
addPolygons(color = ~factpal(clusterpolys_optics$ID), weight = 5, smoothFactor = 0.5,
opacity = 1,
fillColor = ~factpal(clusterpolys_optics$ID), fillOpacity = .5,
highlightOptions = highlightOptions(color = "green", weight = 2, bringToFront = TRUE)
)%>%
addCircles(data=bicycletheft, weight = 3, radius=40,
fillColor=~factpal(clusterpolys_optics$ID), stroke = FALSE, fillOpacity = 0.8)
map_bicycle3
res$clusters_xi
res
res$cluster
dbscan
dbscan_int
dbscan_int
dbscan::dbscan_int
?dbscan
install.packages('mclust')
library(mclust)
xyMclust <- Mclust(bicycletheft@data[,c("Longitude", "Latitude")])
plt(xyMclust)
plot(xyMclust)
xyMclust
xyMclust$modelName
?Mclust
blogdown:::serve_site()
blogdown:::serve_site()
blogdown:::serve_site()
